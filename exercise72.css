/* SECTION 1: STYLES FOR PRESENTATION */
body {
  background-color: black;
  display: flex;
  align-items: center;
  justify-content: center;
}

.evaluation {
  width: 82vw;
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: aliceblue;
}

body h1 {
  font-size: 50px;
}

.rating label {
  /* parameters to label, cursor is optional */
  /* width to fit the stars whithin */
  cursor: pointer;
  width: auto;

  /* to chose the size of the star */
  font-size: 80px;
}

/* SECTION 2: HIDE THE TOGGLE (THIS IS JUST PRESENTATION) */
.rating input {
  display: none;
}

/* SECTION 3: CREATION OF THE RATING-STARS */
.rating label:after {
  /* \2605 is the CSS code for a star */
  content: "\2605";

  /* to have the selection star infront of the other  */
  position: absolute;
  display: block;
  top: 0%;

  /* color of the selection star */
  color: gold;

  /* they are invisible until they are "activated" */
  opacity: 0;
}

/* SECTION 4: ADDING THE FUNCTIONALITY TO RATING STAR SYSTEM */

/* 1 Change star's color when hovered:
Notes:
-This General Sibling Combinator selects...
all pseudo-elements: "label:after" after the hovered input.
-This is a non persistent change i.e. the change is 
forgotten if the input is unhovered.
*/
.rating input:hover ~ label:after {
  opacity: 1;
}

/* 2 Change star's color when checked:
Notes:
-This General Sibling Combinator selects...
all pseudo-elements: "label:after" after "input:checked".
-This change is persistent
*/
.rating input:checked ~ label:after {
  opacity: 1;
}

/* SECTION 5: STYLING THE OUTPUT.  */
/* This is make to have the stars in the correct direction. */
.rating {
  /* this is here to make all atars to be in one line: */
  display: flex;

  /* this is here to because of the...*/
  /* ... General Sibling Combinator ~ */
  transform: rotateY(180deg);
}
